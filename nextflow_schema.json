{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/McGranahanLab/mhc_hammer/main/nextflow_schema.json",
    "title": "McGranahanLab/mhc_hammer pipeline parameters",
    "description": "HLA loss of heterozygosity detection ",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": [
                "input"
            ],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 8 columns, and a header row. See [README](https://github.com/McGranahanLab/mhc_hammer/blob/main).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "description": "Path to the output directory where the results will be saved.",
                    "default": "./results",
                    "fa_icon": "fas fa-folder-open"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "method for publishing files"
                }
            }
        },
        "pipeline_run_parameters": {
            "title": "Pipeline run parameters",
            "type": "object",
            "description": "General parameters for how the pipeline will be run",
            "default": "",
            "properties": {
                "run_bam_subsetting": {
                    "type": "boolean",
                    "default": true,
                    "description": "If inputting subset bam files, you can skip this step by setting this to false"
                },
                "run_rna_analysis": {
                    "type": "boolean",
                    "default": true,
                    "description": "Boolean whether mhc_hammer RNA subworkflow will be run"
                },
                "run_alt_splicing_analysis": {
                    "type": "boolean",
                    "default": true,
                    "description": "Boolean whether alt splicing subworkflow will be run"
                },
                "singularityDir": {
                    "type": "string",
                    "description": "Path to directory to store singularity images downloaded by this pipeline",
                    "format": "directory-path"
                }
            }
        },
        "subset_bam_job_parameters": {
            "title": "Subset Bam job parameters",
            "type": "object",
            "description": "Subset bam specific parameters",
            "default": "",
            "properties": {
                "unmapped_reads": {
                    "type": "boolean",
                    "default": true,
                    "description": "Boolean whether unmapped reads will be extracted when producing subset bam"
                },
                "mhc_coords": {
                    "type": "string",
                    "description": "mhc region coordinates file (txt file with format chr6:start:stop)",
                    "default": "${projectDir}/assets/mhc_coords_chr6.txt",
                    "format": "file-path"
                },
                "fish_reads": {
                    "type": "boolean",
                    "description": "Boolean whether reads containing 30 kmer sequences of HLA genes will be retrieved during when producing subset bam",
                    "default": true
                },
                "fish_reads_only": {
                    "type": "boolean",
                    "description": "Boolean whether only the fishing reads step is run for the bam subsetting process."
                },
                "kmer_file": {
                    "type": "string",
                    "description": "If fish_reads == true, file path to 30 kmer file",
                    "default": "${projectDir}/assets/kmer_files/imgt_30mers.fa"
                },
                "contig_reads": {
                    "type": "boolean",
                    "default": true,
                    "description": "Boolean whether reads mapping to contigs will be extracted when producing subset bam (if bam file is aligned to GRCh37 - suggest true)"
                },
                "contigs_file": {
                    "type": "string",
                    "description": "Path to file with a contig on each line. Reads mapping to these contigs will be extracted in the subset bam process if params.contig_reads=  true"
                },
                "save_flagstat": {
                    "type": "boolean",
                    "description": "save flagstat output for sample bam",
                    "default": true
                },
                "save_subset_bams": {
                    "type": "boolean",
                    "description": "save subset bams containing potential HLA reads"
                }
            }
        },
        "generate_fqs_params": {
            "title": "Generate FQs params",
            "type": "object",
            "description": "Generate FQ specific parameters",
            "default": "",
            "properties": {
                "save_hla_fqs": {
                    "type": "boolean",
                    "description": "Save HLA FQs containing potential HLA reads"
                }
            }
        },
        "hlahd_job_params": {
            "title": "HLAHD job params",
            "type": "object",
            "description": "HLAHD specific parameters",
            "default": "",
            "properties": {
                "hlahd_ignored_read_length": {
                    "type": "integer",
                    "description": "A read whose length is shorter than this parameter is ignored"
                },
                "hlahd_trimming_ratio": {
                    "type": "number",
                    "description": "Trimming option. If a match sequence is not found in the dictionary, trim the read until some sequence is matched to or reaches this ratio"
                },
                "save_hlahd_predictions": {
                    "type": "boolean",
                    "description": "Save the HLAHD predicted alleles (only the first prediction is output)",
                    "default": true
                }
            }
        },
        "generate_references_params": {
            "title": "Generate references params",
            "type": "object",
            "description": "Generate references parameters",
            "default": "",
            "properties": {
                "mhc_fasta": {
                    "type": "string",
                    "description": "path to HLA fasta",
                    "default": "${projectDir}/assets/mhc_references/genome/mhc_genome_strand.fasta"
                },
                "mhc_gtf": {
                    "type": "string",
                    "description": "path to HLA gtf",
                    "default": "${projectDir}/assets/mhc_references/gtf/mhc.gtf"
                },
                "mhc_transcriptome_fasta": {
                    "type": "string",
                    "description": "path to HLA transcriptome fasta",
                    "default": "${projectDir}/assets/mhc_references/transcriptome/mhc_cds.fasta"
                },
                "save_references": {
                    "type": "boolean",
                    "description": "Save patient specific HLA class I gene reference files",
                    "default": true
                }
            }
        },
        "alignment_job_params": {
            "title": "Alignment job params",
            "type": "object",
            "description": "Alignment specific parameters",
            "default": "",
            "properties": {
                "save_novo_bam": {
                    "type": "boolean",
                    "description": "Save bam file containing all reads aligned to personalised HLA reference"
                }
            }
        },
        "make_hla_bams_job_parameters": {
            "title": "Make HLA bams job parameters",
            "type": "object",
            "description": "Specific parameters for the generation of HLA bam files",
            "default": "",
            "properties": {
                "max_mismatch": {
                    "type": "integer",
                    "description": "maximum number of mismatches between aligned read and personalised reference",
                    "default": 1
                },
                "save_hla_bams_dna": {
                    "type": "boolean",
                    "description": "Save HLA allele specific bam files (DNA)",
                    "default": true
                },
                "save_read_counts_dna": {
                    "type": "boolean",
                    "description": "Save file containing the number of reads aligning to patient HLA alleles before and after mismatch filtering (DNA)",
                    "default": true
                },
                "save_hla_bams_rna": {
                    "type": "boolean",
                    "description": "Save HLA allele specific bam files (RNA)",
                    "default": true
                },
                "save_read_counts_rna": {
                    "type": "boolean",
                    "description": "Save file containing the number of reads aligning to patient HLA alleles before and after mismatch filtering (RNA)",
                    "default": true
                }
            }
        },
        "mutation_calling_parameters": {
            "title": "Mutation calling parameters",
            "type": "object",
            "description": "Mutation calling specific parameters",
            "default": "",
            "properties": {
                "save_filtered_vcfs": {
                    "type": "boolean",
                    "description": "Save HLA allele specific vcf files (both sample and patient level)",
                    "default": true
                },
                "save_vep_output": {
                    "type": "boolean",
                    "description": "Save vep output files (both sample and patient level)",
                    "default": true
                }
            }
        },
        "alt_splicing_job_parameters": {
            "title": "Alt splicing job parameters",
            "type": "object",
            "description": "Exon skipping detection specific parameters",
            "default": "",
            "properties": {
                "intron_motif_filter": {
                    "type": "integer",
                    "default": 0
                },
                "uniq_num_across_junc": {
                    "type": "integer",
                    "default": 2
                },
                "annotation_filter": {
                    "type": "integer",
                    "default": 0
                },
                "save_sample_sj_tab": {
                    "type": "boolean",
                    "description": "Save sample splice junction tables",
                    "default": true
                },
                "save_cohort_sj_tab": {
                    "type": "boolean",
                    "description": "save cohort level splice junction table",
                    "default": true
                },
                "save_novel_splice_junctions": {
                    "type": "boolean",
                    "description": "Save novel splice junctions table",
                    "default": true
                },
                "save_star_aligned_bams": {
                    "type": "boolean",
                    "description": "Save star aligned HLA allele specific bams (used for detecting exon skipping)"
                },
                "save_sample_kmer": {
                    "type": "boolean",
                    "default": true
                },
                "codon_table": {
                    "type": "string",
                    "default": "${projectDir}/assets/codon_table.csv",
                    "description": "Path",
                    "format": "file-path",
                    "mimetype": "csv"
                }
            }
        },
        "cn_and_aib_job_parameters": {
            "title": "CN and AIB job parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "min_depth": {
                    "type": "integer",
                    "default": 30,
                    "description": "Min depth required for the detection",
                    "hidden": true
                }
            }
        },
        "hla_allele_expression_params": {
            "title": "HLA allele expression params",
            "type": "object",
            "description": "HLA allele expression specific parameters",
            "default": "",
            "properties": {
                "min_frac_unique_reads": {
                    "type": "number",
                    "default": 0.1,
                    "description": "In heterozygous HLA genes, the minimum fraction of reads that must align uniquely to either allele to be able to quantify allele specific expression"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/pipeline_run_parameters"
        },
        {
            "$ref": "#/definitions/subset_bam_job_parameters"
        },
        {
            "$ref": "#/definitions/generate_fqs_params"
        },
        {
            "$ref": "#/definitions/hlahd_job_params"
        },
        {
            "$ref": "#/definitions/generate_references_params"
        },
        {
            "$ref": "#/definitions/alignment_job_params"
        },
        {
            "$ref": "#/definitions/make_hla_bams_job_parameters"
        },
        {
            "$ref": "#/definitions/mutation_calling_parameters"
        },
        {
            "$ref": "#/definitions/alt_splicing_job_parameters"
        },
        {
            "$ref": "#/definitions/cn_and_aib_job_parameters"
        },
        {
            "$ref": "#/definitions/hla_allele_expression_params"
        }
    ]
}
